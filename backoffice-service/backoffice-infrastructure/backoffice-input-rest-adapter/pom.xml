<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>it.luzzetti.justdrink</groupId>
    <artifactId>backoffice-infrastructure</artifactId>
    <version>${revision}</version>
  </parent>

  <name>:: backoffice-input-rest-adapter ::</name>
  <artifactId>backoffice-input-rest-adapter</artifactId>

  <dependencies>
    <!-- Rest Endpoints -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>

    <!-- GeoJSON Jackson library -->
    <dependency>
      <groupId>com.graphhopper.external</groupId>
      <artifactId>jackson-datatype-jts</artifactId>
    </dependency>

    <!-- Hateoas -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-hateoas</artifactId>
    </dependency>
    <!-- Endpoint Documentation -->
    <dependency>
      <groupId>org.springdoc</groupId>
      <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
    </dependency>

    <!-- Security with a Resource Server Auth -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-security</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-oauth2-client</artifactId>
    </dependency>
    <!--        In order to delegate the identification control to a Keycloak server,
    we'll use the spring-boot-starter-oauth2-resource-server library.
    It will allow us to validate a JWT token with the Keycloak server. -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
    </dependency>

  </dependencies>

</project>
